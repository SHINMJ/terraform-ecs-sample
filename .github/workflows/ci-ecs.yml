name: ECS CI

# 릴리즈 될때만 해당 actions 실행되도록 아래와 같이 설정.
# v로 시작하는 태그가 달린 경우에만 실행.
# 현재는 테스트용으로 해당 브랜치에 푸시되는 경우에도 작동하도록 설정
on:
  push:
    branches:
      - example-ci-ecs
    tags:
      - 'v*'

jobs:
  deploy-ecs:
    runs-on: ubuntu-latest
    env:
      PORT: 8000
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: demo-stage
          IMAGE_TAG: latest
        run: |
          cd ./app
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      # 새로운 작업 정의
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./app/task-definition.json
          container-name: demo-container-stage
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: demo-service-stage
          cluster: demo-cluster-stage
          wait-for-service-stability: true